<Window x:Class="XmlGeneratorNew.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:models="clr-namespace:XmlGeneratorNew.Models"
        xmlns:converters="clr-namespace:XmlGeneratorNew.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="XmlGeneratorNew" Height="800" Width="1100"
        Background="#fafafa"
        FontFamily="Segoe UI, Segoe UI Symbol, Segoe WP"
        SnapsToDevicePixels="True"
        xmlns:system="clr-namespace:System;assembly=mscorlib">
    <Window.Resources>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:TreeViewItemLevelToVisibilityConverter x:Key="LevelToVisibilityConverter"/>
        <converters:TreeViewItemLevelToMarginConverter x:Key="LevelToMarginConverter" Indent="5"/>

        <!-- Стиль TreeViewItem с линиями -->
        <Style x:Key="TreeViewItemWithLine" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Border x:Name="HeaderHost" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <!-- Вертикальная линия -->
                                    <Border Grid.Column="0"
                                            Width="1"
                                            Margin="8,0,0,0"
                                            VerticalAlignment="Stretch"
                                            Background="#E0E0E0"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, 
                                                                 Converter={StaticResource LevelToVisibilityConverter}}"/>
                                    <!-- Горизонтальная линия ("ножка") -->
                                    <Border x:Name="PART_HorizontalLine"
                                            Grid.Column="1"
                                            Height="1"
                                            Width="10"
                                            Margin="0,0,2,0"
                                            Background="#9E9E9E"
                                            VerticalAlignment="Center"/>
                                    <!-- Expander -->
                                    <Grid Grid.Column="2" Margin="2,0">
                                        <ToggleButton x:Name="Expander"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press"
                                                      Click="Expander_Click">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Grid Width="16" Height="16" Background="Transparent">
                                                                    <Path x:Name="ExpandPath"
                                                                          Data="M 0 4 L 8 12 L 16 4 Z"
                                                                          Stroke="#9E9E9E"
                                                                          StrokeThickness="1.5"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="Data" Value="M 4 0 L 12 8 L 4 16 Z"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="#2196F3"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </Grid>
                                    <!-- Контент -->
                                    <ContentPresenter Grid.Column="3"
                                                      x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <!-- Дочерние элементы -->
                            <ItemsPresenter x:Name="ItemsHost" Visibility="Collapsed"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_HorizontalLine" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="HeaderHost" Property="Background" Value="#e8edec"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="HeaderHost" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LevelToMarginConverter}}"/>
        </Style>

        <!-- Шаблон для строк-блоков в дереве -->
        <DataTemplate DataType="{x:Type system:String}">
            <TextBlock Text="{Binding}"
                      FontStyle="Italic"
                      Foreground="DarkSlateGray"
                      FontSize="13"/>
        </DataTemplate>
    </Window.Resources>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Заголовок -->
        <TextBlock Grid.Row="0" Text="Генератор XML" FontSize="26" FontWeight="Bold" Foreground="#2196F3" Margin="0,0,0,5" HorizontalAlignment="Center"/>

        <!-- Кнопки: Пространство имён / Тип / Блоки -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,5">
            <Button Width="130" Height="20" Command="{Binding OpenNamespaceSettingsCommand}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Пространство имён"/>
                    <TextBlock Text="!" Foreground="Red" FontWeight="Bold" Margin="3,0,0,0"/>
                </StackPanel>
            </Button>
            <Button Width="100" Height="20" Margin="10,0,0,0" Command="{Binding OpenTypeSettingsCommand}">
                <TextBlock Text="Тип" HorizontalAlignment="Center"/>
            </Button>
            <Button Width="100" Height="20" Margin="10,0,0,0" Command="{Binding OpenBlocksSettingsCommand}">
                <TextBlock Text="Блоки" HorizontalAlignment="Center"/>
            </Button>
        </StackPanel>

        <!-- Дерево и редактор -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Дерево -->
            <Border Grid.Column="0" Background="White" CornerRadius="8" Padding="10" BorderBrush="#E0E0E0" BorderThickness="1">
                <TreeView x:Name="MainTreeView" ItemsSource="{Binding RootItems}"
                          SelectedItemChanged="TreeView_SelectedItemChanged"
                          PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown"
                          MouseMove="TreeView_MouseMove"
                          Drop="TreeView_Drop"
                          DragOver="TreeView_DragOver"
                          AllowDrop="True"
                          KeyDown="TreeView_KeyDown"
                          Background="Transparent" BorderThickness="0">
                    <TreeView.InputBindings>
                        <KeyBinding Key="D" Modifiers="Control" 
                                    Command="{Binding DataContext.DuplicateCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                    </TreeView.InputBindings>
                    <TreeView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource TreeViewItemWithLine}" TargetType="TreeViewItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Дубль"
                                                  Command="{Binding DataContext.DuplicateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  CommandParameter="{Binding}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type models:SectionItem}" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#2196F3" FontSize="15"/>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type models:GroupItem}" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name}" FontWeight="SemiBold" FontSize="14" Foreground="#212121"/>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type models:PropertyItem}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" FontSize="13" Foreground="#212121"/>
                                <TextBlock Text=" (" Margin="5,0,0,0" Foreground="#757575"/>
                                <TextBlock Text="{Binding Type}" Foreground="#757575"/>
                                <TextBlock Text=")" Foreground="#757575"/>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Border>

            <!-- Редактор -->
            <Border Grid.Column="2" Background="White" CornerRadius="8" Padding="15" BorderBrush="#E0E0E0" BorderThickness="1">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Padding="10">
                    <Grid>
                        <ContentControl Content="{Binding SelectedItem}">
                            <ContentControl.Resources>
                                <!-- Здесь шаблоны редактирования (оставь как есть) -->
                                <DataTemplate DataType="{x:Type models:SectionItem}">
                                    <StackPanel>
                                        <TextBlock Text="Редактирование секции" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                        <TextBlock Text="Код (code):"/>
                                        <TextBox Text="{Binding Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="Имя (name):"/>
                                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="Заголовок (title):"/>
                                        <TextBox Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="semd:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox SelectedValue="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      SelectedValuePath="Content"
                                                      Width="150"
                                                      Margin="0,0,5,0">
                                                <ComboBoxItem Content=""/>
                                                <ComboBoxItem Content="DiseaseAnamnesis"/>
                                                <ComboBoxItem Content="LifeAnamnesis"/>
                                                <ComboBoxItem Content="ObjectiveState"/>
                                            </ComboBox>
                                            <TextBlock Text="(если пусто, будет использовано значение из поля ниже)" FontSize="10" Foreground="Gray" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <TextBox Text="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,10"/>
                                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                            <Button Content="Добавить группу" Width="120" Margin="0,0,5,0"
                                                    Command="{Binding DataContext.AddGroupCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"/>
                                            <Button Content="Добавить свойство" Width="120"
                                                    Command="{Binding DataContext.AddPropertyCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type models:GroupItem}">
                                    <StackPanel>
                                        <TextBlock Text="Редактирование группы" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                        <TextBlock Text="Имя (для дерева, не отобразится в metadata):"/>
                                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="od:groupMode:"/>
                                            <CheckBox IsChecked="{Binding OdGroupModeIsParagraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="paragraph" Margin="3,0,23,5"/>
                                            <TextBlock Text="e:captionStyle:"/>
                                            <CheckBox IsChecked="{Binding ECaptionStyleIsGroupHeader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="GroupHeader" Margin="3,0,23,5"/>
                                            <TextBlock Text="od:groupStyle:"/>
                                            <CheckBox IsChecked="{Binding OdGroupStyleIsNewParagraphBoldHeader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="NewParagraphBoldHeader" Margin="3,0,23,5"/>
                                        </StackPanel>
                                        <TextBlock Text="e:caption:"/>
                                        <TextBox Text="{Binding Caption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:caption:"/>
                                        <TextBox Text="{Binding OdCaption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:layout:"/>
                                        <ComboBox SelectedValue="{Binding Layout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValuePath="Content"
                                                  Margin="0,0,0,10">
                                            <ComboBoxItem Content=""/>
                                            <ComboBoxItem Content="DockPanel"/>
                                            <ComboBoxItem Content="StackPanel"/>
                                            <ComboBoxItem Content="GroupBox"/>
                                        </ComboBox>
                                        <TextBlock Text="e:separator:"/>
                                        <TextBox Text="{Binding Separator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:suffix:"/>
                                        <TextBox Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:separator:"/>
                                        <TextBox Text="{Binding OdSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:suffix:"/>
                                        <TextBox Text="{Binding OdSuffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="semd:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox SelectedValue="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      SelectedValuePath="Content"
                                                      Width="150"
                                                      Margin="0,0,5,0">
                                                <ComboBoxItem Content=""/>
                                                <ComboBoxItem Content="DiseaseAnamnesis"/>
                                                <ComboBoxItem Content="LifeAnamnesis"/>
                                                <ComboBoxItem Content="ObjectiveState"/>
                                            </ComboBox>
                                            <TextBlock Text="(если пусто, будет использовано значение из поля ниже)" FontSize="10" Foreground="Gray" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <TextBox Text="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,10"/>
                                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                            <Button Content="Добавить свойство" Width="120" Margin="0,0,5,0"
                                                    Command="{Binding DataContext.AddPropertyCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"/>
                                            <Button Content="Добавить подгруппу" Width="120"
                                                    Command="{Binding DataContext.AddGroupCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type models:PropertyItem}">
                                    <StackPanel>
                                        <TextBlock Text="Редактирование свойства" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                        <TextBlock Text="Имя (для дерева, не отобразится в metadata):"/>
                                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:caption:"/>
                                        <TextBox Text="{Binding Caption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:caption:"/>
                                        <TextBox Text="{Binding OdCaption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="type:"/>
                                        <ComboBox SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Content" Margin="0,0,0,10">
                                            <ComboBoxItem Content="String"/>
                                            <ComboBoxItem Content="Bool"/>
                                            <ComboBoxItem Content="Const"/>
                                        </ComboBox>
                                        <TextBlock Text="value:"/>
                                        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:separator:"/>
                                        <TextBox Text="{Binding Separator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:suffix:"/>
                                        <TextBox Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:separator:"/>
                                        <TextBox Text="{Binding OdSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="od:suffix:"/>
                                        <TextBox Text="{Binding OdSuffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="xaml:MinWidth:"/>
                                        <TextBox Text="{Binding MinWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="xaml:MinLines:"/>
                                        <TextBox Text="{Binding MinLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="e:autoSuggestName:"/>
                                        <TextBox Text="{Binding AutoSuggestName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                        <TextBlock Text="semd:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox SelectedValue="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      SelectedValuePath="Content"
                                                      Width="150"
                                                      Margin="0,0,5,0">
                                                <ComboBoxItem Content=""/>
                                                <ComboBoxItem Content="DiseaseAnamnesis"/>
                                                <ComboBoxItem Content="LifeAnamnesis"/>
                                                <ComboBoxItem Content="ObjectiveState"/>
                                            </ComboBox>
                                            <TextBlock Text="(если пусто, будет использовано значение из поля ниже)" FontSize="10" Foreground="Gray" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <TextBox Text="{Binding Semd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,10"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                        <TextBlock Text="Выберите элемент для редактирования"
                                  FontStyle="Italic" Foreground="Gray"
                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Visibility="{Binding SelectedItem, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </Grid>
                </ScrollViewer>
            </Border>
        </Grid>

        <!-- Кнопки -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
            <Button Content="Добавить секцию" Command="{Binding AddSectionToRootCommand}" Width="120" Margin="0,0,5,0"/>
            <Button Content="Добавить группу" Command="{Binding AddGroupToRootCommand}" Width="120" Margin="0,0,5,0"/>
            <Button Content="Добавить свойство" Command="{Binding AddPropertyToRootCommand}" Width="120" Margin="0,0,5,0"/>
            <Button Content="Удалить" Command="{Binding DeleteCommand}" Width="100" Margin="0,0,5,0"/>
            <Button Content="Сбросить всё" Command="{Binding ResetCommand}" Width="120" Margin="0,0,5,0"/>
            <Button Content="Загрузить XML" Command="{Binding LoadCommand}" Width="120" Margin="0,0,5,0"/>
            <Button Content="Сохранить XML" Command="{Binding SaveCommand}" Width="140"/>
        </StackPanel>
    </Grid>
</Window>